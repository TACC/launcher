#!/bin/bash

# This is a program that runs the Launcher program.

echo "Hello, "$USER".  This script will run the Launcher program."


echo -n "Have you already downloaded Launcher? y/n: "
read -n 1 download
echo
while [ "$download" != "y" -a "$download" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
done

if [ "$download" ==  "n" ]; then
wget https://github.com/TACC/launcher/archive/v3.1.tar.gz
tar xzvf v3.1.tar.gz
tmplaunchdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export LAUNCHER_DIR="$tmplaunchdir/launcher-3.1"
elif [ "$download" == "y" ]; then
validDir=false

while [ "$validDir" == false ]; do
echo "Please enter the pathname to the directory that "
echo "contains the launcher files and press [ENTER]: "
read DIR
if [ ${#DIR} -lt 1 ]; then
echo "No parameters were given"
echo
elif [ ! -e "$DIR" ]; then         
echo "Directory does not exist!"
echo
elif [ ! -d "$DIR" ]; then
echo "Not a Directory"
echo
else
validDir="true"
export LAUNCHER_DIR=$DIR
echo
fi
done
fi
echo
echo "Launcher can be used to execute anything which can be executed on the command line"
echo "such as shell scripts, compiled programs, Python/R/Matlab, etc."
echo "The list of jobs to be executed is placed in a text file"
echo " one job per line, and no blank lines in between jobs."
echo
validDir=false

while [ "$validDir" == false ]; do
echo "Please enter your Launcher job file and then press [ENTER]: "
read file
if [ -f $file ]; then
echo "Not a valid file. Please try again."
echo
else
validDir="true"
export LAUNCHER_FILE=$file
fi
done

echo
echo -n "What type of job scheduling would you like? dynamic (d) interleaved (i) block (b): "
read -n 1 sched
echo
while [ "$sched" != "d" -a "$sched" != "i" -a "$sched" != "b" ]; do
echo -n "you did not enter an appropiate response. Please enter d, i, or b again: "
done

if [ "$sched" == "d" ]; then
export LAUNCHER_SCHED=dynamic
elif [ "$sched" == "i" ]; then
export LAUNCHER_SCHED=interleaved
else
export LAUNCHER_SCHED=block
fi
echo -n "The processes per node is automatically set to 1. Would you like to change that? y/n: "
read -n 1 ppn
echo
while [ "$ppn" != "y" -a "$ppn" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
done
if [ "$ppn" ==  "n" ]; then
export LAUNCHER_PPN=1
elif [ "$ppn" == "y" ]; then
validppn=false

while [ "$validppn" == false ]; do
echo "Please enter the amount of processes per node desired and then press [ENTER]"
echo -n " (I don't recommend using more than 96 on a Wrangler node!): "
read numPPN
if expr "$numPPN" : '-\?[0-9]\+$' >/dev/null
then
validppn=true
export LAUNCHER_PPN=$numPPN
else

echo "No parameters or a wrong type of parameters were given"
echo
fi
done
fi

echo -n "Would you like to change the work directory? y/n: "
read -n 1 workDir
echo
while [ "$workDir" != "y" -a "$workDir" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
done

if [ "$workDir" == "y" ]; then
validDir=false

while [ "$validDir" == false ]; do
echo "Please enter the pathname to the directory that "
echo "contains the launcher work files and press [ENTER]: "
read DIR
if [ ${#DIR} -lt 1 ]; then
echo "No parameters were given"
echo
elif [ ! -e "$DIR" ]; then         
echo "Directory does not exist!"
echo
elif [ ! -d "$DIR" ]; then
echo "Not a Directory"
echo
else
validDir="true"
export LAUNCHER_WORKDIR=$DIR
echo
fi
done
fi


echo -n "Would you like to change the plugin directory? y/n: "
read -n 1 pluginDir
echo
while [ "$pluginDir" != "y" -a "$pluginDir" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
done

if [ "$pluginDir" == "y" ]; then
validDir=false

while [ "$validDir" == false ]; do
echo "Please enter the pathname to the directory that "
echo "contains the plugins and press [ENTER]: "
read DIR
if [ ${#DIR} -lt 1 ]; then
echo "No parameters were given"
echo
elif [ ! -e "$DIR" ]; then         
echo "Directory does not exist!"
echo
elif [ ! -d "$DIR" ]; then
echo "Not a Directory"
echo
else
validDir="true"
export LAUNCHER_PLUGIN_DIR=$DIR
echo
fi
done
fi


echo -n "Would you like to change the host file? y/n: "
read -n 1 hostFile
echo
while [ "$hostFile" != "y" -a "$hostFile" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
done

if [ "$hostFile" == "y" ]; then
validFile=false

while [ "$validFile" == false ]; do
echo "Please enter the pathname to the file that "
echo "is the hostfile and press [ENTER]: "
read FILE
if [ ${#FILE} -lt 1 ]; then
echo "No parameters were given"
echo
elif [ ! -f "$FILE" ]; then         
echo "File does not exist!"
echo
else
validFile="true"
export LAUNCHER_HOSTFILE=$FILE
echo
fi
done
fi

if [ ! -z $LAUNCHER_HOSTFILE ]; then
echo -n "Would you like to change the amount of hosts used in the host file? y/n: "
read -n 1 hostFile
echo
while [ "$hostFile" != "y" -a "$hostFile" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
done

if [ "$hostFile" == "y" ]; then
validNum=false

while [ "$validNum" == false ]; do
echo "Please enter the number of hosts wanting "
echo "to be used in the hostfile and press [ENTER]: "
read numHosts
if expr "$numHosts" : '-\?[0-9]\+$' >/dev/null
then
validNum=true
export LAUNCHER_NHOSTS=$numHosts
else
echo "No parameters or a wrong type of parameters were given"
echo
fi
done
fi
fi
echo
echo "Launcher will now be launched"
$LAUNCHER_DIR/paramrun

change="y"
while [ "$change" == "y" ]; do
echo
echo "Would you like to change any of the variables? y/n: "
read -n 1 change
echo
while [ "$change" != "y" -a "$change" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
read -n 1 change
done
if [ "$change" == "y" ]; then
echo "enter your variable in the form export and then the variable name = new value"
echo " (e.g. export LAUNCHER_SCHED=block)"
read line
$line
echo
moreP="y"
while [ "$moreP" == "y" ]; do
echo -n "any other variables to change? y/n"
read -n 1 moreP
while [ "$moreP" != "y" -a "$moreP" != "n" ]; do
echo -n "you did not enter an appropiate y or n. Please do so again: "
read -n 1 moreP
done
if [ "$moreP" == "y" ]; then
echo "Enter the change of the variables :"
read anyLine
$anyLine
fi
done
$LAUNCHER_DIR/paramrun
fi

done

exit 1
